@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200&icon_names=add_photo_alternate,delete,sms,thumb_up&v=1");
:root {
    --blue: #09C8FF;
    --red: #FF4555;
    --green: #39D7B3;
    --yellow: #FFBA4B;
    --text: #677b7a;
  }
  
  div[class*=loader] {
    position: relative;
    width: 200px;
    height: 200px;
    margin: 0 auto;
    margin-top: 12vh;
  }

  .square {
    width: 30px;
    height: 30px;
    background-color: rgba(255,255,255,0);
    margin-right: auto;
    margin-left: auto;
    border: 2px solid #0EB1D2;
    left: 43px;
    top: 43px;
    position: absolute;
  }
  
  .square-loader {
    transform: rotate(45deg);
  }
  
  .first_square {
    animation: first_square_animate 2s infinite ease-in-out;
  }
  .second_square {
    animation: second_square 2s forwards, 
               second_square_animate 2s infinite ease-in-out;
  }	
  .third_square {
    animation: third_square 2s forwards, 
               third_square_animate 2s infinite ease-in-out;
  }	
      
  @keyframes second_square {
    100% { width: 60px; height:60px; left: 28px; top: 28px; }
  }
  
  @keyframes third_square {
    100% { width: 90px; height:90px; left: 13px; top: 13px;}
  }
  
  @keyframes first_square_animate {
    0%   { transform: perspective(100px) rotateX(0deg) rotateY(0deg);} 
    50%  { transform: perspective(100px) rotateX(-180deg) rotateY(0deg); }
    100% { transform: perspective(100px) rotateX(-180deg) rotateY(-180deg); }
  }
  
  @keyframes second_square_animate {
    0%   { transform: perspective(200px) rotateX(0deg) rotateY(0deg); } 
    50%  { transform: perspective(200px) rotateX(180deg) rotateY(0deg); } 
    100% { transform: perspective(200px) rotateX(180deg) rotateY(180deg); }
  }
  
  @keyframes third_square_animate {
    0%   { transform: perspective(300px) rotateX(0deg) rotateY(0deg); } 
    50%  { transform: perspective(300px) rotateX(-180deg) rotateY(0deg); } 
    100% { transform: perspective(300px) rotateX(-180deg) rotateY(-180deg); }
  }
  
  .loading {
    margin: 0 auto;
    width: 200px;
    text-align: center;
    transform: translateY(-200%);
    font-size: 28px;
    font-weight: 400;
    color: var(--text);
  }

.background{
  background-color: #f5f5f5;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  width: min(750px,80vw);
  position: relative;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  margin: 0 auto;
  margin-top: 13vh;
  margin-bottom: 10vh;
  animation: slide-in 1s ease-out;
}

@keyframes slide-in {
  0% {
    opacity: 0;
    transform: translateY(15%);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.DetailQuestion{
    display: flex;
    flex-direction: column;
    gap: 20px;
}
.question {
    position: relative;
    padding-bottom: 20px;
}
.question::before {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 1.5px;
    background-color: #c0ccd0;
    bottom: 0;
}
.DetailQuestion .detailTitle{
    display: flex;
    justify-content: space-between;
}

.tagBoard {
    display: flex;
    align-items: center;
}

.tagBoard p {
    font-size: small;
    line-height: 100%;

}

.Title{
    font-size: 24px;
    font-weight: bold;
    color: #3f3e47;
}

.tag {
    display: inline-flex;
    align-items: center;
    border-radius: 4px;
    --tw-bg-opacity: 1;
    background-color: rgb(239 246 255 / var(--tw-bg-opacity));
    padding: 0.5rem 0.8rem;
    margin-right: 1rem;
    font-size: 1rem;
    line-height: 1rem;
    font-weight: 500;
    --tw-text-opacity: 1;
    color: rgb(29 78 216 / var(--tw-text-opacity));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-inset: inset;
    --tw-ring-color: rgb(29 78 216 / 0.1);
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.inputbox {
    background-color: #eceff4;
    padding: 10px;
    border-radius: 5px;
    transition: all 0.5s ease;
    display: flex;
    flex-direction: column;
}
.inputTools {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.3rem;
}
.richinput{
    border: none;
    overflow-wrap: anywhere;
    transition: all 0.5s;
}
.richinput:focus{
    outline: none;
}
.createNewReply{
    font-size: larger;
    font-weight: bold;
    margin: 20px 0;
}

.richinput:empty::before {
    content: attr(data-placeholder);
    color: #aaa;
    pointer-events: none; 
  }

.delete{
    margin: 0 0.5rem;
}

.send {
    margin: 0 1rem;
    border: none;
    cursor: pointer;
    color: white;
    background-color: #1e80ff;
    transition: all 0.5s;
    padding: 8px 10px;
    width: 57px;
    height: 38px;
}

.box {
	display: grid;
	justify-items: center;
	align-items: center;
}
.box .spinner {
	height: 20px;
	width: 20px;
	background: rgba(0, 0, 0, .2);
	border-radius: 50%;
	border-top: 2px solid #fff;
	border-right: 2px solid transparent;
	animation: spinner6 700ms linear infinite;
}
@keyframes spinner6 {
	to {
		transform: rotate(360deg);
	}
}

.inputbox:focus-within {
    background-color: #f5f5f5;
    box-shadow: 0 0 3px rgba(43, 124, 237, 0.5);
}

.replyList{
    display: flex;
    flex-direction: column;
    gap: 40px;
    margin-top: 3vh;
}

.DetailReply{
    display: flex;
    flex-direction: column;
    min-height: 50px;
}

.profile {
    width: 38px;
    height: 38px;
    border-radius: 50%;
    background-color: #1e80ff;
    background-image: url(data);
}

.user {
    display: flex;
    gap: 16px;
}
.username {
    flex: 1;
    align-self: center;
    font-size: 17px;
}

.more {
    width: 30px;
    display: flex;
    align-content: center;
    justify-content: center;
    margin-right: auto;
    transform: scale(0.9);
}

.content {
    margin-left: 62px;
    margin-top: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.information {
    margin-top: 10px;
    display: flex;
    width: 30%;
    gap: 8%;
}

.picturelist{
    display: flex;
}

.image-view {
    width: 110px;
}
  
  .alert {
    background: white;
    width: 100%;
    display: flex;
    padding: 1rem;
    align-items: center;
    border-radius: .8rem;
    border: 2px solid;
    margin-bottom: 1rem;
    position: relative;
    box-shadow: 0px 5px 12px rgba(0, 0, 0, .04), 0px 12px 25px rgba(0, 0, 0, .07);
    animation: fadeIn 1s ease forwards;
    transition: all 500ms ease;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .alert__message {
    color: var(--text);
  }
  
  .alert__close {
    width: 1.3rem;
    height: 1.3rem;
    line-height: 1.3rem;
    color: var(--text);
    text-align: center;
    position: absolute;
    top: .5rem;
    right: .5rem;
    cursor: pointer;
    border-radius: .4rem;
  }
  
  .alert__close:hover,
  .alert__close:focus {
    background: rgba(103, 123, 122, 0.2); /* 替代变量 $text 的透明效果 */
  }
  
  .alert__icon {
    margin-right: 1rem;
    width: 36px;
    height: 36px;
  }

  .alert__icon-path {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
    stroke-width: 4px;
    animation: dash 2s ease forwards;

  }
  
  .alert__icon-path--type {
    animation-delay: 300ms;
    animation-duration: 5s;
  }
  
  .alert--success {
    --color: var(--green);
    color: var(--color);
    border-color: var(--color);
  }
  
  .alert--danger {
    --color: var(--red);
    color: var(--color);
    border-color: var(--color);
  }
  
  @keyframes dash {
    from {
      stroke-dashoffset: 1000;
    }
    to {
      stroke-dashoffset: 0;
    }
  }
  
  html {
    box-sizing: border-box;
  }
  
  *, *:before, *:after {
    box-sizing: inherit;
  }

  body {
    color: var(--text);
    font-family: system-ui;
  }
  
  .wrapper {
    max-width: 400px;
    width: 100%;
    padding-left: .5rem;
    padding-right: .5rem;
    position: absolute;
    align-self: center;
    top: 2vh;
    z-index: 999;
  }
@media screen and (max-width: 500px) {
    .picturelist {
        flex-direction: column;
    }
}

  .img {
    width: min(250px,84%);

  }